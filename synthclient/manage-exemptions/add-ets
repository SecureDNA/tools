#!/bin/bash

# This script expects to be called as follows:
#
#     cat order.json                         \
#       | add-ets /data/customers/username   \
#       > order-with-ets.json
#
# The input, `order.json`, should be a synthclient request:
#
#     {"region": "us", "fasta": "ACTGACTG"}
#
# The customer data should be laid out as follows.
#
#     customers/
#       username/
#         exemption-2025-01-01.et
#         exemption-2025-01-01.secret
#         exemption-2025-02-02.et
#         exemption-2025-02-02.secret
#
# The result, `order-with-ets.json`, will have a new "ets" field ready to be
# sent to synthclient. When there are multiple exemption tokens stored in the
# customer data, the resulting "ets" field will contain all of them, with
# an OTP for each.

set -e

die() { >&2 echo -e "$1" && exit 1; }

command -v jq &> /dev/null || die "jq could not be found. Please install it:\n\n    https://jqlang.org/\n"
command -v totp-cli &> /dev/null || die "totp-cli could not be found. Please install it:\n\n    https://github.com/yitsushi/totp-cli\n"
[[ "$#" -eq 1 ]] || die "Usage:  cat order.json | add-ets /path/to/customer/data"

ets=''
for et_path in "$1"/*.et; do
  secret_path="${et_path%.et}.secret"
  [[ -f "$secret_path" ]] || die "\x1b[31mFatal error:\x1b[0m Secret file \x1b[36m$secret_path\x1b[0m is missing.

To fix this issue:
1. Go to https://pages.securedna.org/exemption/request
2. Recreate this customer's exemption request
3. This time, when adding 2FA, click the TOTP QR code to copy the secret key to your clipboard
4. Save the contents to \x1b[36m$secret_path\x1b[0m 
5. Approve the exemption request at https://pages.securedna.org/exemption/approve
6. Download the exemption token to \x1b[36m$et_path\x1b[0m
7. Run this tool again
"
  et_json=$(cat "$et_path" | jq -sR)
  otp_json=$(cat "$secret_path" | totp-cli instant | jq -sR 'rtrimstr("\n")') || die "\x1b[31mFatal error:\x1b[0m Failed to generate OTP for \x1b[36m$secret_path\x1b[0m"
  ets+=",{\"et\": $et_json, \"requestor_otp\": $otp_json}"
done

# Add the "ets" field to the order, skipping the first comma.
jq -c ".ets += [${ets:1}]"
